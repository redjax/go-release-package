name: Automated Release

on:
  push:
    branches:
      - release
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      - name: Configure git for CI
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Tidy Go modules
        run: go mod tidy

      - name: Run tests
        run: go test ./...

      - name: Create .semrelrc config
        run: |
          echo '{
            "branches": ["release"],
            "allow-initial-development-versions": true
          }' > .semrelrc

      - name: Run semantic release
        id: semrel
        uses: go-semantic-release/action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          changelog-file: .generated-go-semantic-release-changelog.md
          allow-initial-development-versions: true
          force-bump-patch-version: true

      - name: Show version
        if: steps.semrel.outputs.new-release-published == 'true'
        run: |
          echo "New release version: ${{ steps.semrel.outputs.new-release-version }}"

      - name: Build multi-platform binaries
        if: steps.semrel.outputs.new-release-published == 'true'
        run: |
          version=${{ steps.semrel.outputs.new-release-version }}
          mkdir -p dist
          platforms=(linux/amd64 linux/arm64 darwin/amd64 darwin/arm64 windows/amd64)
          for platform in "${platforms[@]}"; do
            os="${platform%/*}"
            arch="${platform#*/}"
            out_dir="dist/${os}-${arch}"
            mkdir -p "$out_dir"
            output="${out_dir}/yourprogram"
            [ "$os" = "windows" ] && output="${output}.exe"
            GOOS=$os GOARCH=$arch CGO_ENABLED=0 go build -ldflags "-X main.version=$version" -o "$output" ./...
          done

      - name: Upload release assets
        if: steps.semrel.outputs.new-release-published == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.semrel.outputs.new-release-version }}
          files: dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
