name: Automated Release

on:
  push:
    branches:
      - release

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Tidy Go modules
        run: go mod tidy

      - name: Run tests
        run: go test ./...

      - name: Run go-semantic-release
        uses: go-semantic-release/action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          release-branches: release

      - name: Build for multiple platforms
        run: |
          mkdir -p dist
          platforms=(
            "linux/amd64"
            "linux/arm64"
            "darwin/amd64"
            "darwin/arm64"
            "windows/amd64"
          )
          for platform in "${platforms[@]}"; do
            os=${platform%/*}
            arch=${platform#*/}
            output="dist/${os}-${arch}/yourprogram"
            if [ "$os" = "windows" ]; then
              output="${output}.exe"
            fi
            env GOOS=$os GOARCH=$arch CGO_ENABLED=0 go build -o $output ./...
          done
